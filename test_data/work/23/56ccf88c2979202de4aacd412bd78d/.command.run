#!/bin/bash
# NEXTFLOW TASK: Pipeline_prep
set -e
set -u
NXF_DEBUG=${NXF_DEBUG:=0}; [[ $NXF_DEBUG > 1 ]] && set -x
NXF_ENTRY=${1:-nxf_main}

nxf_container_env() {
cat << EOF
export PATH="/Users/uwvirongs/Documents/Michelle/lava/bin:\$PATH"
EOF
}

nxf_date() {
    local ts=$(date +%s%3N);
    if [[ ${#ts} == 10 ]]; then echo ${ts}000
    elif [[ $ts == *%3N ]]; then echo ${ts/\%3N/000}
    elif [[ $ts == *3N ]]; then echo ${ts/3N/000}
    elif [[ ${#ts} == 13 ]]; then echo $ts
    else echo "Unexpected timestamp value: $ts"; exit 1
    fi
}

nxf_env() {
    echo '============= task environment ============='
    env | sort | sed "s/\(.*\)AWS\(.*\)=\(.\{6\}\).*/\1AWS\2=\3xxxxxxxxxxxxx/"
    echo '============= task output =================='
}

nxf_kill() {
    declare -a children
    while read P PP;do
        children[$PP]+=" $P"
    done < <(ps -e -o pid= -o ppid=)

    kill_all() {
        [[ $1 != $$ ]] && kill $1 2>/dev/null || true
        for i in ${children[$1]:=}; do kill_all $i; done
    }

    kill_all $1
}

nxf_mktemp() {
    local base=${1:-/tmp}
    if [[ $(uname) = Darwin ]]; then mktemp -d $base/nxf.XXXXXXXXXX
    else TMPDIR="$base" mktemp -d -t nxf.XXXXXXXXXX
    fi
}

on_exit() {
    exit_status=${nxf_main_ret:=$?}
    printf $exit_status > /Users/uwvirongs/Documents/Michelle/lava/test_data/work/23/56ccf88c2979202de4aacd412bd78d/.exitcode
    set +u
    [[ "$tee1" ]] && kill $tee1 2>/dev/null
    [[ "$tee2" ]] && kill $tee2 2>/dev/null
    [[ "$ctmp" ]] && rm -rf $ctmp || true
    docker rm $NXF_BOXID &>/dev/null || true
    exit $exit_status
}

on_term() {
    set +e
    docker kill $NXF_BOXID
}

nxf_launch() {
    docker run -i --memory 6144m -v /Users/uwvirongs/Documents/Michelle/lava:/Users/uwvirongs/Documents/Michelle/lava -v "$PWD":"$PWD" -w "$PWD" --entrypoint /bin/bash --name $NXF_BOXID quay.io/vpeddu/lava_image:latest -c "eval $(nxf_container_env); /bin/bash /Users/uwvirongs/Documents/Michelle/lava/test_data/work/23/56ccf88c2979202de4aacd412bd78d/.command.sh"
}

nxf_stage() {
    true
    # stage input files
    rm -f Example1_file2.fastq
    rm -f Example1_file2.fastq.pileup
    rm -f Example1_file2.fastq.bam
    rm -f input.1
    rm -f Example1_file1.fastq
    rm -f Example1_file1.fastq.pileup
    rm -f FIRSTFILE.bam
    rm -f input.2
    rm -f lava_ref.gff
    rm -f CONTROL.fastq
    rm -f consensus.fasta.amb
    rm -f consensus.fasta.bwt
    rm -f consensus.fasta.sa
    rm -f consensus.fasta
    rm -f consensus.fasta.ann
    rm -f consensus.fasta.pac
    ln -s /Users/uwvirongs/Documents/Michelle/lava/test_data/Example1_file2.fastq Example1_file2.fastq
    ln -s /Users/uwvirongs/Documents/Michelle/lava/test_data/work/b4/aa5f41d5458c1531e7a7578e6d9942/Example1_file2.fastq.pileup Example1_file2.fastq.pileup
    ln -s /Users/uwvirongs/Documents/Michelle/lava/test_data/work/b4/aa5f41d5458c1531e7a7578e6d9942/Example1_file2.fastq.bam Example1_file2.fastq.bam
    ln -s /Users/uwvirongs/Documents/Michelle/lava/test_data/work/tmp/52/c83259d2518f823191f9d1cea0970a/input.1 input.1
    ln -s /Users/uwvirongs/Documents/Michelle/lava/test_data/Example1_file1.fastq Example1_file1.fastq
    ln -s /Users/uwvirongs/Documents/Michelle/lava/test_data/work/bd/896b805204a8625bc494bca48abf85/Example1_file1.fastq.pileup Example1_file1.fastq.pileup
    ln -s /Users/uwvirongs/Documents/Michelle/lava/test_data/work/bd/896b805204a8625bc494bca48abf85/FIRSTFILE.bam FIRSTFILE.bam
    ln -s /Users/uwvirongs/Documents/Michelle/lava/test_data/work/tmp/32/786727453bfdadf39201fff45cf3df/input.2 input.2
    ln -s /Users/uwvirongs/Documents/Michelle/lava/test_data/Example1_ref.gff lava_ref.gff
    ln -s /Users/uwvirongs/Documents/Michelle/lava/test_data/Example1_file1.fastq CONTROL.fastq
    ln -s /Users/uwvirongs/Documents/Michelle/lava/test_data/work/fc/dcef5844c02ce3eab3d58d1bea004d/consensus.fasta.amb consensus.fasta.amb
    ln -s /Users/uwvirongs/Documents/Michelle/lava/test_data/work/fc/dcef5844c02ce3eab3d58d1bea004d/consensus.fasta.bwt consensus.fasta.bwt
    ln -s /Users/uwvirongs/Documents/Michelle/lava/test_data/work/fc/dcef5844c02ce3eab3d58d1bea004d/consensus.fasta.sa consensus.fasta.sa
    ln -s /Users/uwvirongs/Documents/Michelle/lava/test_data/work/43/689d6416d08c1fbf54a4b27043cd1c/consensus.fasta consensus.fasta
    ln -s /Users/uwvirongs/Documents/Michelle/lava/test_data/work/fc/dcef5844c02ce3eab3d58d1bea004d/consensus.fasta.ann consensus.fasta.ann
    ln -s /Users/uwvirongs/Documents/Michelle/lava/test_data/work/fc/dcef5844c02ce3eab3d58d1bea004d/consensus.fasta.pac consensus.fasta.pac
}

nxf_unstage() {
    true
    [[ ${nxf_main_ret:=0} != 0 ]] && return
}

nxf_main() {
    trap on_exit EXIT
    trap on_term TERM INT USR1 USR2

    [[ "${NXF_CHDIR:-}" ]] && cd "$NXF_CHDIR"
    export NXF_BOXID="nxf-$(dd bs=18 count=1 if=/dev/urandom 2>/dev/null | base64 | tr +/ 0A)"
    NXF_SCRATCH=''
    [[ $NXF_DEBUG > 0 ]] && nxf_env
    touch /Users/uwvirongs/Documents/Michelle/lava/test_data/work/23/56ccf88c2979202de4aacd412bd78d/.command.begin
    set +u
    set -u
    [[ $NXF_SCRATCH ]] && echo "nxf-scratch-dir $HOSTNAME:$NXF_SCRATCH" && cd $NXF_SCRATCH
    nxf_stage

    set +e
    local ctmp=$(set +u; nxf_mktemp /dev/shm 2>/dev/null || nxf_mktemp $TMPDIR)
    local cout=$ctmp/.command.out; mkfifo $cout
    local cerr=$ctmp/.command.err; mkfifo $cerr
    tee .command.out < $cout &
    tee1=$!
    tee .command.err < $cerr >&2 &
    tee2=$!
    ( nxf_launch ) >$cout 2>$cerr &
    pid=$!
    wait $pid || nxf_main_ret=$?
    wait $tee1 $tee2
    nxf_unstage
}

$NXF_ENTRY
